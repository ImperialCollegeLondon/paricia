name: CI Paricia

on: [push]

jobs:

  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pre-commit/action@v2.0.2

  test:

    needs: qa

    runs-on: ubuntu-latest

    services:
      postgres:
        image: timescale/timescaledb-ha:pg14-latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    - name: Run migrations
      run: python manage.py migrate
    - name: Run tests
      run: python manage.py test -v 2
      
  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    needs: test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Get image metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/${{ github.repository }}
        
    - name: Build and push Docker image for the web app
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}

  docs:
    needs: test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "pip"
          cache-dependency-path: "requirements*.txt"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-doc.txt
          pip install .
      - name: Deploy Docs
        run: mkdocs gh-deploy --force