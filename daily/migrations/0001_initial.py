# Generated by Django 3.2.14 on 2023-04-15 03:19

import timescale.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PolarWind",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                (
                    "speed",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Speed"
                    ),
                ),
                (
                    "direction",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Direction",
                    ),
                ),
            ],
            options={
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="AirTemperature",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AtmosphericPressure",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BatteryVoltage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChlorineConcentrationDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="e"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Flow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FlowManual",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Humidity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="IndirectRadiation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OxygenConcentrationDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="e"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="PercentageOxygenConcentrationDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="e"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="PhycocyaninDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="e"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Precipitation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Total"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RedoxPotentialDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="e"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="SoilMoisture",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SoilTemperature",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SolarRadiation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StripLevelReading",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "uncertainty",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Uncertainty",
                    ),
                ),
                (
                    "data_import_date",
                    models.DateTimeField(verbose_name="Data import date"),
                ),
                (
                    "data_start_date",
                    models.DateTimeField(verbose_name="Data start date"),
                ),
                ("calibrated", models.BooleanField(verbose_name="Calibrated")),
                (
                    "comments",
                    models.CharField(
                        max_length=250, null=True, verbose_name="Comments"
                    ),
                ),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="WaterAcidityDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="e"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="WaterLevel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WaterTemperature",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WaterTemperatureDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="e"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="WaterTurbidityDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="e"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="WindDirection",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WindVelocity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("date", models.DateField(verbose_name="date")),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "used_for_monthly",
                    models.BooleanField(default=False, verbose_name="used_for_monthly"),
                ),
                ("completeness", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "v",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="v"
                    ),
                ),
                (
                    "r",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="r"
                    ),
                ),
                (
                    "a",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="a"
                    ),
                ),
                (
                    "g",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="g"
                    ),
                ),
                (
                    "e",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="e"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="waterturbiditydepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="daily_water_station_c4fe31_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="watertemperaturedepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="daily_water_station_e502a4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="wateraciditydepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="daily_water_station_b03995_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="striplevelreading",
            index=models.Index(
                fields=["station_id", "data_import_date"],
                name="daily_strip_station_b85ccb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="striplevelreading",
            index=models.Index(
                fields=["station_id", "data_start_date", "time"],
                name="daily_strip_station_2224c7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="striplevelreading",
            index=models.Index(
                fields=["data_import_date"], name="daily_strip_data_im_e8bc79_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="redoxpotentialdepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="daily_redox_station_ecdca1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="phycocyanindepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="daily_phyco_station_1a5f4d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="percentageoxygenconcentrationdepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="daily_perce_station_d4e30d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="oxygenconcentrationdepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="daily_oxyge_station_025c07_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="chlorineconcentrationdepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="daily_chlor_station_8c40d8_idx",
            ),
        ),
    ]
