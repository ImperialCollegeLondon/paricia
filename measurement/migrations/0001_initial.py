# Generated by Django 3.0.11 on 2022-07-20 12:47

import django.db.models.deletion
import timescale.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("station", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="LevelFunctionTable",
            fields=[
                ("id", models.SmallIntegerField(primary_key=True, serialize=False)),
                ("funcion", models.CharField(max_length=80, verbose_name="Función")),
                (
                    "level_inf",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Level Inf. (cm)"
                    ),
                ),
                (
                    "level_1",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Level 1"
                    ),
                ),
                (
                    "level_2",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Level 2"
                    ),
                ),
                (
                    "level_3",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Level 3"
                    ),
                ),
                (
                    "level_4",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Level 4"
                    ),
                ),
                (
                    "level_5",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Level 5"
                    ),
                ),
                (
                    "level_sup",
                    models.DecimalField(
                        decimal_places=1, max_digits=5, verbose_name="Level Sup. (cm)"
                    ),
                ),
                (
                    "flow_inf",
                    models.DecimalField(
                        decimal_places=5, max_digits=10, verbose_name="Flow Inf. (cm)"
                    ),
                ),
                (
                    "flow_1",
                    models.DecimalField(
                        decimal_places=5, max_digits=10, verbose_name="Flow 1"
                    ),
                ),
                (
                    "flow_2",
                    models.DecimalField(
                        decimal_places=5, max_digits=10, verbose_name="Flow 2"
                    ),
                ),
                (
                    "flow_3",
                    models.DecimalField(
                        decimal_places=5, max_digits=10, verbose_name="Flow 3"
                    ),
                ),
                (
                    "flow_4",
                    models.DecimalField(
                        decimal_places=5, max_digits=10, verbose_name="Flow 4"
                    ),
                ),
                (
                    "flow_5",
                    models.DecimalField(
                        decimal_places=5, max_digits=10, verbose_name="Flow 5"
                    ),
                ),
                (
                    "flow_sup",
                    models.DecimalField(
                        decimal_places=5, max_digits=10, verbose_name="Flow Sup. (cm)"
                    ),
                ),
            ],
            options={
                "ordering": ("level_inf",),
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="PermissionsMeasurement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": (("validar", "usar interfaz de validación"),),
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="PolarWind",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                (
                    "speed",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Speed"
                    ),
                ),
                (
                    "direction",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Direction",
                    ),
                ),
            ],
            options={
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="ValidationReport",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("estado", models.BooleanField()),
                ("fecha", models.DateTimeField()),
                (
                    "valor_seleccionado",
                    models.DecimalField(decimal_places=6, max_digits=14, null=True),
                ),
                (
                    "valor",
                    models.DecimalField(decimal_places=6, max_digits=14, null=True),
                ),
                (
                    "variacion_consecutiva",
                    models.DecimalField(decimal_places=6, max_digits=14, null=True),
                ),
                ("comentario", models.CharField(max_length=350)),
                ("class_fila", models.CharField(max_length=30)),
                ("class_fecha", models.CharField(max_length=30)),
                ("class_validacion", models.CharField(max_length=30)),
                ("class_valor", models.CharField(max_length=30)),
                ("class_variacion_consecutiva", models.CharField(max_length=30)),
                ("class_stddev_error", models.CharField(max_length=30)),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AirTemperature",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AtmosphericPressure",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BatteryVoltage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChlorineConcentrationDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="DischargeCurve",
            fields=[
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Id"
                    ),
                ),
                (
                    "require_recalculate_flow",
                    models.BooleanField(
                        default=False, verbose_name="Requires re-calculate flow?"
                    ),
                ),
            ],
            options={
                "ordering": ("station", "time"),
            },
        ),
        migrations.CreateModel(
            name="Flow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FlowManual",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Humidity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="IndirectRadiation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LevelFunction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                (
                    "level",
                    models.DecimalField(
                        db_index=True,
                        decimal_places=1,
                        max_digits=5,
                        verbose_name="Level (cm)",
                    ),
                ),
                ("function", models.CharField(max_length=80, verbose_name="Function")),
            ],
            options={
                "ordering": ("discharge_curve", "level"),
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="OxygenConcentrationDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="PercentageOxygenConcentrationDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="PhycocyaninDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Precipitation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RedoxPotentialDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="SoilMoisture",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SoilTemperature",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SolarRadiation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StripLevelReading",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "uncertainty",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Uncertainty",
                    ),
                ),
                (
                    "data_import_date",
                    models.DateTimeField(verbose_name="Data import date"),
                ),
                (
                    "data_start_date",
                    models.DateTimeField(verbose_name="Data start date"),
                ),
                ("calibrated", models.BooleanField(verbose_name="Calibrated")),
                (
                    "comments",
                    models.CharField(
                        max_length=250, null=True, verbose_name="Comments"
                    ),
                ),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="WaterAcidityDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="WaterLevel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WaterTemperature",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WaterTemperatureDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="WaterTurbidityDepth",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, null=True, verbose_name="Value"
                    ),
                ),
                ("depth", models.PositiveSmallIntegerField(verbose_name="Depth")),
            ],
            options={
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="WindDirection",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WindVelocity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    timescale.db.models.fields.TimescaleDateTimeField(interval="1 day"),
                ),
                ("station_id", models.PositiveIntegerField(verbose_name="station_id")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=6, max_digits=14, null=True, verbose_name="Value"
                    ),
                ),
                (
                    "maximum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Maximum",
                    ),
                ),
                (
                    "minimum",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=14,
                        null=True,
                        verbose_name="Minimum",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="waterturbiditydepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="measurement_station_0e9e93_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="watertemperaturedepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="measurement_station_f376f5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="wateraciditydepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="measurement_station_cc3299_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="striplevelreading",
            index=models.Index(
                fields=["station_id", "data_import_date"],
                name="measurement_station_18e0d6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="striplevelreading",
            index=models.Index(
                fields=["station_id", "data_start_date", "time"],
                name="measurement_station_d41b10_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="striplevelreading",
            index=models.Index(
                fields=["data_import_date"], name="measurement_data_im_0b6d2a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="redoxpotentialdepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="measurement_station_1946e9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="phycocyanindepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="measurement_station_97154b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="percentageoxygenconcentrationdepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="measurement_station_a69078_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="oxygenconcentrationdepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="measurement_station_a4c0cc_idx",
            ),
        ),
        migrations.AddField(
            model_name="levelfunction",
            name="discharge_curve",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="measurement.DischargeCurve",
            ),
        ),
        migrations.AddField(
            model_name="dischargecurve",
            name="station",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="station.Station",
                verbose_name="Station",
            ),
        ),
        migrations.AddIndex(
            model_name="chlorineconcentrationdepth",
            index=models.Index(
                fields=["station_id", "depth", "time"],
                name="measurement_station_7d34d2_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="dischargecurve",
            unique_together={("station", "time")},
        ),
    ]
