# Generated by Django 5.1 on 2024-09-05 13:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('formatting', '0004_remove_format_file_remove_format_format_type_and_more'),
        ('variable', '0007_alter_sensorinstallation_owner_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='classification',
            name='accumulate',
        ),
        migrations.AddField(
            model_name='classification',
            name='accumulate',
            field=models.SmallIntegerField(blank=True, help_text='If set to a number of minutes, the data will be accumulated over that period.', null=True, verbose_name='Accumulate minutes'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='cls_id',
            field=models.AutoField(help_text='Primary key.', primary_key=True, serialize=False, verbose_name='Id'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='decimal_comma',
            field=models.BooleanField(default=False, help_text='Whether the data uses a comma as a decimal separator.', verbose_name='Uses comma as decimal separator?'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='format',
            field=models.ForeignKey(help_text='The format of the data file.', on_delete=django.db.models.deletion.PROTECT, to='formatting.format', verbose_name='Format'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='incremental',
            field=models.BooleanField(default=False, help_text='Whether the data is an incremental counter. If it is, any value below the previous one will be removed.', verbose_name='Is it an incremental counter?'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='maximum',
            field=models.SmallIntegerField(blank=True, help_text='Index of the maximum value column, starting in 1.', null=True, verbose_name='Maximum value column'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='maximum_validator_column',
            field=models.SmallIntegerField(blank=True, help_text='Index of the maximum value validator column, starting in 1.', null=True, verbose_name='Maximum value validator column'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='maximum_validator_text',
            field=models.CharField(blank=True, help_text='Maximum value validator text.', max_length=10, null=True, verbose_name='Maximum value validator text'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='minimum',
            field=models.SmallIntegerField(blank=True, help_text='Index of the minimum value column, starting in 1.', null=True, verbose_name='Minimum value column'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='minimum_validator_column',
            field=models.SmallIntegerField(blank=True, help_text='Index of the minimum value validator column, starting in 1.', null=True, verbose_name='Minimum value validator column'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='minimum_validator_text',
            field=models.CharField(blank=True, help_text='Minimum value validator text.', max_length=10, null=True, verbose_name='Minimum value validator text'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='resolution',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Resolution of the data. Only used if it is to be accumulated.', max_digits=6, null=True, verbose_name='Resolution'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='value',
            field=models.SmallIntegerField(help_text='Index of the value column, starting in 1.', verbose_name='Value column'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='value_validator_column',
            field=models.SmallIntegerField(blank=True, help_text='Index of the value validator column, starting in 1.', null=True, verbose_name='Value validator column'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='value_validator_text',
            field=models.CharField(blank=True, help_text='Value validator text.', max_length=10, null=True, verbose_name='Value validator text'),
        ),
        migrations.AlterField(
            model_name='classification',
            name='variable',
            field=models.ForeignKey(help_text='The variable to which the data belongs.', on_delete=django.db.models.deletion.PROTECT, to='variable.variable', verbose_name='Variable'),
        ),
    ]
